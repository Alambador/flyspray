<?php

/*
   ---------------------------------------------------
   | This script contains the notification functions |
   ---------------------------------------------------
*/

// Define the language pack
get_language_pack($lang, 'notify.inc');

// We need database access functions
//include('db.inc.php');

// Start of the Notifications class
class Notifications {

   // Thank you to Mr Lance Conry for this awesome, FAST Jabber message function
   // Check out his company at http://www.rhinosw.com/
   function JabberMessage( $sHost, $sPort, $sUsername, $sPassword, $vTo, $sSubject, $sBody, $sClient='Flyspray' ) {

      global $db;
      global $fs;

      if ($sHost != ''
         && $sPort != ''
         && $sUsername != ''
         && $sPassword != ''
         && !empty($vTo)
         ) {

         $sBody = str_replace('&amp;', '&', $sBody);

         $socket = fsockopen ( $sHost, $sPort, $errno, $errstr, 30 );
         if ( !$socket ) {
            return '$errstr (' . $errno . ')';
         } else {

            fputs($socket, '<?xml version="1.0" encoding="UTF-8"?><stream:stream to="' . $sHost . '" xmlns="jabber:client" xmlns:stream="http://etherx.jabber.org/streams">' );
            fgets( $socket, 1 );

            fputs( $socket, '<iq type="set" id="AUTH_01"><query xmlns="jabber:iq:auth"><username>' . $sUsername . '</username><password>' . $sPassword . '</password><resource>' . $sClient . '</resource></query></iq>' );
            fgets( $socket, 1 );
            //sleep(1);
            if ( is_array( $vTo ))
            {
               foreach ($vTo as $sTo)
               {
                  //fputs ( $socket, '<message to="' . $sTo . '" ><body>' . $sBody . '</body><subject>' . $sSubject . '</subject></message>' );
                  fputs ( $socket, '<message to="' . $sTo . '" ><body><![CDATA[' . $sBody . ']]></body><subject><![CDATA[' . $sSubject . ']]></subject></message>' );
               }
            } else
            {
                 fputs ( $socket, '<message to="' . $vTo . '" ><body><![CDATA[' . $sBody . ']]></body><subject><![CDATA[' . $sSubject . ']]></subject></message>' );
            }

            fclose ( $socket );
         }

      // End of checking that jabber is set up
      }

   //return TRUE;
   }


   function SendEmail($to, $subject, $message) {

      global $db;
      global $fs;

      if (empty($to) OR $to == $_COOKIE['flyspray_userid'])
         return;

      // Get the new email class
      require("class.phpmailer.php");

      // Define the class
      $mail = new PHPMailer();

      $mail->From = $flyspray_prefs['admin_email'];
      $mail->FromName = $project_prefs['project_title'];

      $mail->IsMail();                                      // Use PHP's mail() function

      if (is_array($to))
      {
         foreach ($to as $key => $val)
         {
            $mail->AddAddress($val);                        // Add each address
         }

      } else
      {
         $mail->AddAddress($to);                            // Add a single address
      }

      $mail->WordWrap = 70;                                 // set word wrap to 70 characters
      //$mail->IsHTML(true);                                  // set email format to HTML

      $mail->Subject = $notify_text['notifyfrom'];            // CHANGE ME WHEN WE MAKE NOTIFICATION SUBJECTS CUSTOMISABLE
      //$mail->Body    = "This is the HTML message body <b>in bold!</b>";
      $mail->AltBody = $message;

      if(!$mail->Send())
      {
         echo "Message could not be sent. <p>";
         echo "Mailer Error: " . $mail->ErrorInfo;
         exit;
      }

/*
      if (empty($to)){
         return;
      } elseif (is_array($to)) {
         $to = implode(",", $to);
      }


      $flyspray_prefs = $this->GetGlobalPrefs();
      require('lang/'.$flyspray_prefs['lang_code'].'/functions.inc.php');
      // $subject = $functions_text['notifyfrom'].' '.$flyspray_prefs['project_title'];
      $message = str_replace('&amp;', '&', $message);
      $message = $functions_text['autogenerated']."\n".str_repeat('-', 72)."\n\n".$message;
      $message = stripslashes(wordwrap($message, 72));
      $headers = array();
      $headers[] = "Content-Type: text/plain; charset=UTF-8";
      $headers[] = trim('From: '.$flyspray_prefs['project_title'].' <'.$flyspray_prefs['admin_email'].'>');
      // We are using Mutt as the user-agent so spamassassin likes us
      $headers[] = "User-Agent: Mutt";
      $headers = implode("\n", $headers);
      mail($to, $subject, $message, $headers);

      */
   }


   // This function sends out basic messages at specified times.
   function Basic($to, $subject, $message) {

      global $db;
      global $fs;

      if (empty($to) OR $to == $_COOKIE['flyspray_userid'])
          return;

      // Check that we're not trying to send a notification to the user who triggered it
      //if ($to != $current_user['user_id']) {

      $flyspray_prefs = $fs->GetGlobalPrefs();

      $lang = $flyspray_prefs['lang_code'];
      require("lang/$lang/functions.inc.php");

      $get_user_details = $db->Query("SELECT real_name, jabber_id, email_address, notify_type FROM flyspray_users WHERE user_id = ?", array($to));
      list($real_name, $jabber_id, $email_address, $notify_type) = $db->FetchArray($get_user_details);

      // if app preferences say to use jabber, or if the user can (and has) selected jabber
      // and the jabber options are entered in the applications preferences
      if (($flyspray_prefs['user_notify'] == '3')
        OR ($flyspray_prefs['user_notify'] == '1' && $notify_type == '2')

        && $flyspray_prefs['jabber_server'] != ''
        && $flyspray_prefs['jabber_port'] != ''
        && $flyspray_prefs['jabber_username'] != ''
        && $flyspray_prefs['jabber_password'] != ''
        )
      {
         $subject = stripslashes($subject);
         $message = stripslashes($message);

         $this->JabberMessage(
                              $flyspray_prefs['jabber_server'],
                              $flyspray_prefs['jabber_port'],
                              $flyspray_prefs['jabber_username'],
                              $flyspray_prefs['jabber_password'],
                              $jabber_id,
                              //"{$functions_text['notifyfrom']} {$flyspray_prefs['project_title']}",
                              $subject,
                              $message,
                              "Flyspray"
                             );
         //return TRUE;

      // if app preferences say to use email, or if the user can (and has) selected email
      } elseif (($flyspray_prefs['user_notify'] == '2') OR ($flyspray_prefs['user_notify'] == '1' && $notify_type == '1'))
      {
         $to = $email_address;
         $this->SendEmail($to, $subject, $message);
      };

   // End of basic notification function
   }


   // Detailed notification function - generates and passes arrays of recipients
   // These are the additional people who want to be notified of a task changing
   function Detailed($task_id, $subject, $message) {

      global $db;
      global $fs;

      $flyspray_prefs = $fs->GetGlobalPrefs();
      $this_task = $fs->GetTaskDetails($task_id);

      $lang = $flyspray_prefs['lang_code'];
      require("lang/$lang/functions.inc.php");

      $jabber_users = array();
      $email_users = array();

      $get_users = $db->Query("SELECT user_id FROM flyspray_notifications WHERE task_id = ?", array($task_id));

      while ($row = $db->FetchArray($get_users)) {

         // Check for current user
         if ($row['user_id'] != $_COOKIE['flyspray_userid'] &&  $row['user_id'] != $this_task['assigned_to'])
         {
            $get_details = $db->Query("SELECT notify_type, jabber_id, email_address
                                       FROM flyspray_users
                                       WHERE user_id = ?",
                                       array($row['user_id']));

            while ($subrow = $db->FetchArray($get_details)) {

               if (($flyspray_prefs['user_notify'] == '1'
                && $subrow['notify_type'] == '1')
                OR ($flyspray_prefs['user_notify'] == '2')
                )
               {
                  array_push($email_users, $subrow['email_address']);
               } elseif (($flyspray_prefs['user_notify'] == '1' && $subrow['notify_type'] == '2')
                          OR ($flyspray_prefs['user_notify'] == '3'))
               {
                  array_push($jabber_users, $subrow['jabber_id']);
               };

            };

         // End of checking for current user
         };

      // End of cycling through user array
      };

      $subject = stripslashes($subject);
      $message = stripslashes($message);

      // Pass the recipients and message onto the Jabber Message function
      $this->JabberMessage(
                           $flyspray_prefs['jabber_server'],
                           $flyspray_prefs['jabber_port'],
                           $flyspray_prefs['jabber_username'],
                           $flyspray_prefs['jabber_password'],
                           $jabber_users,
                           $subject,
                           $message,
                           "Flyspray"
                          );


      // Pass the recipients and message onto the mass email function
      $this->SendEmail($email_users, $subject, $message);

      //return TRUE;
   // End of detailed notification function
   }



// End of Notify class
}

?>